<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Math on Tim Trice</title>
    <link>/tags/math/</link>
    <description>Recent content in Math on Tim Trice</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/tags/math/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Finding Palindromes in R</title>
      <link>/r/palindromes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/r/palindromes/</guid>
      <description>R Session Info   Letâ€™s show some examples of palindromes:
 1001 101 kayak abcba  This types of data are easy to identify visuall if they are palindromes or not. But, how can we do this computationally? One way is with a pattern recognition function such as grepl.
x &amp;lt;- 1001 y &amp;lt;- 1002 grepl(&amp;quot;^([[:digit:]])([[:digit:]])\\2\\1$&amp;quot;, x) ## [1] TRUE grepl(&amp;quot;^([[:digit:]])([[:digit:]])\\2\\1$&amp;quot;, y) ## [1] FALSE So this verifies for us that our number x is a palindrome but y is not.</description>
    </item>
    
  </channel>
</rss>